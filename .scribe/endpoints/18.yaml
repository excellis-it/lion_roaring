name: Policy
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v3/user/policy/load
    metadata:
      groupName: Policy
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Policies List'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'optional for search.'
        required: false
        example: '"abc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      search: '"abc"'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "current_page": 1,
                 "data": [
                     {
                         "id": 7,
                         "user_id": 37,
                         "file_name": "dummy (1).pdf",
                         "file_extension": "pdf",
                         "file": "policies/06C4cc8uACENraZzOjILXIY5QIg4QQrDESsT5Kqv.pdf",
                         "created_at": "2024-11-11T07:02:33.000000Z",
                         "updated_at": "2024-11-11T07:02:33.000000Z"
                     },
                     {
                         "id": 6,
                         "user_id": 1,
                         "file_name": "partner-Photoroom.jpg",
                         "file_extension": "jpg",
                         "file": "policies/L4u3mwqeGc8BuCuHXR5X9ZYOPbV2SYgQcvqDIiIN.jpg",
                         "created_at": "2024-08-27T06:34:46.000000Z",
                         "updated_at": "2024-08-27T06:34:46.000000Z"
                     },
                     {
                         "id": 5,
                         "user_id": 1,
                         "file_name": "A2ncCVFTo7T9zg1wjM9BPyX9u1PctUGVsPi8oEXb.jpg",
                         "file_extension": "jpg",
                         "file": "policies/1sk1WN3iEFUA3ztNYNCApyqR5jKg2RyLSBXHk1oP.jpg",
                         "created_at": "2024-08-27T06:34:46.000000Z",
                         "updated_at": "2024-08-27T06:34:46.000000Z"
                     }
                 ],
                 "first_page_url": "http://127.0.0.1:8000/api/v3/user/policy/load?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http://127.0.0.1:8000/api/v3/user/policy/load?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http://127.0.0.1:8000/api/v3/user/policy/load?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http://127.0.0.1:8000/api/v3/user/policy/load",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 3,
                 "total": 3
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: '{"error": "Failed to fetch policies."}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a1gab6d5DfPc38kEeh6ZVv4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/policy/store
    metadata:
      groupName: Policy
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create policies'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'files to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: '{"message": "Policy(s) uploaded successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 201
        content: '{"error": "Validation failed or duplicate policy found."}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6536heg8EkaaDZ4b1PdvcVf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/policy/delete/{id}'
    metadata:
      groupName: Policy
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete policy'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the policy to delete.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message": "Policy deleted successfully."}'
        headers: []
        description: success
        custom: []
      -
        status: 201
        content: '{"error": "Policy not found or permission denied."}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gd8PfhkZEa5Vc16e3D46bav'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/policy/download/{id}'
    metadata:
      groupName: Policy
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Download policy file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the download.'
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'The file download response.'
        headers: []
        description: success
        custom: []
      -
        status: 201
        content: '{"error": "Policy not found or permission denied."}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a68ak3hgdPb6ZEc5Vfv1e4D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/policy/view/{id}'
    metadata:
      groupName: Policy
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Single Policy details'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the policy to view.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data": {"id": 1, "file_name": "strategy1.pdf", "file_extension": "pdf", "user_id": 1, "file": "policies/strategy1.pdf"}}'
        headers: []
        description: success
        custom: []
      -
        status: 201
        content: '{"error": "Policy not found or permission denied."}'
        headers: []
        description: error
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PE5Zafev3ab41kV6g68hcDd'
    controller: null
    method: null
    route: null
    custom: []
