## Autogenerated by Scribe. DO NOT MODIFY.

name: Members
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v3/create-partner
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store new Members'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_name:
        name: user_name
        description: 'The unique username.'
        required: true
        example: johndoe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ecclesia_id:
        name: ecclesia_id
        description: 'nullable The ID of the ecclesia.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      role:
        name: role
        description: 'The role to assign.'
        required: true
        example: MEMBER
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      middle_name:
        name: middle_name
        description: 'nullable The middle name of the user.'
        required: false
        example: Smith
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password. Must contain at least one special character (@$%&).'
        required: true
        example: P@ssword1
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The confirmed password. Must match the password.'
        required: true
        example: P@ssword1
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address of the user.'
        required: true
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'The country of the user.'
        required: true
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'The state of the user.'
        required: true
        example: California
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'The city of the user.'
        required: true
        example: 'Los Angeles'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      zip:
        name: zip
        description: 'The zip code.'
        required: true
        example: '90001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address2:
        name: address2
        description: 'nullable The secondary address.'
        required: false
        example: 'Apt 4B'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'The phone number.'
        required: true
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_name: johndoe
      ecclesia_id: 1
      role: MEMBER
      first_name: John
      last_name: Doe
      middle_name: Smith
      email: johndoe@example.com
      password: P@ssword1
      confirm_password: P@ssword1
      address: '123 Main St'
      country: USA
      state: California
      city: 'Los Angeles'
      zip: '90001'
      address2: 'Apt 4B'
      phone: '1234567890'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Customer created successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to create user.",
            "error": "Validation error or database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b31ev6V6Z48EghPcd5afDak'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/partners/list
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List Of Members'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'optional for search.'
        required: false
        example: '"abc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: '"abc"'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "current_page": 1,
                 "data": [
                     {
                         "id": 39,
                         "ecclesia_id": 9,
                         "created_id": null,
                         "user_name": "johndoe",
                         "first_name": "John",
                         "middle_name": "A.",
                         "last_name": "Doe",
                         "email": "johndoe@example.com",
                         "phone": "1234567890",
                         "email_verified_at": "2024-11-06T10:49:25.000000Z",
                         "profile_picture": null,
                         "address": "123 Main St",
                         "city": "Springfield",
                         "state": "Illinois",
                         "address2": "Apt 4B",
                         "country": "USA",
                         "zip": "62704",
                         "status": 0,
                         "created_at": "2024-11-06T10:49:25.000000Z",
                         "updated_at": "2024-11-06T10:49:25.000000Z"
                     },
                     {
                         "id": 38,
                         "ecclesia_id": 4,
                         "created_id": null,
                         "user_name": "masum2",
                         "first_name": "Masum",
                         "middle_name": null,
                         "last_name": "2",
                         "email": "masum2@excellisit.net",
                         "phone": "+91 11 1111 1111",
                         "email_verified_at": "2024-11-05T07:17:07.000000Z",
                         "profile_picture": null,
                         "address": "Kolkata",
                         "city": "Kolkata",
                         "state": "41",
                         "address2": null,
                         "country": "101",
                         "zip": "700001",
                         "status": 1,
                         "created_at": "2024-11-05T07:17:07.000000Z",
                         "updated_at": "2024-11-05T07:17:07.000000Z"
                     },
                     {
                         "id": 37,
                         "ecclesia_id": 4,
                         "created_id": null,
                         "user_name": "masum1",
                         "first_name": "Test",
                         "middle_name": null,
                         "last_name": "User",
                         "email": "masum@excellisit.net",
                         "phone": "+91 91234 56789",
                         "email_verified_at": "2024-10-28T08:35:17.000000Z",
                         "profile_picture": "profile_picture\/sLWWnksqS6PHYMdZeBQ4OK3SnbVA0oMc9oykPbCn.webp",
                         "address": "kolkata",
                         "city": "kolkata",
                         "state": "41",
                         "address2": "kolkata",
                         "country": "101",
                         "zip": "700001",
                         "status": 1,
                         "created_at": "2024-10-28T08:35:17.000000Z",
                         "updated_at": "2024-11-08T12:59:01.000000Z"
                     }
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=1",
                 "from": 1,
                 "last_page": 2,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=2",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=2",
                         "label": "2",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=2",
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list?page=2",
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/partners\/list",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 15,
                 "total": 2
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
             "message": "Error occurred while fetching the partners."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca3bfadkD6E1vhg48Z5e6PV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/partners/create-data
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Load data roles, ecclesias, countries.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "roles": [
              {"id": 1, "name": "Manager"},
              {"id": 2, "name": "Supervisor"}
            ],
            "ecclesias": [
              {"id": 10, "name": "Ecclesia One"},
              {"id": 9, "name": "Ecclesia Two"}
            ],
            "countries": [
              {"id": 1, "name": "United States"},
              {"id": 2, "name": "Canada"}
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dv5dcbg6P14EkfeVZ8aa36h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/partners/update/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update Members's details"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: debitis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      middle_name:
        name: middle_name
        description: 'nullable The middle name of the user.'
        required: false
        example: Smith
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address:
        name: address
        description: 'The address of the user.'
        required: true
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: 'The phone number.'
        required: true
        example: '1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      ecclesia_id:
        name: ecclesia_id
        description: 'nullable The ID of the ecclesia.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      country:
        name: country
        description: 'The country of the user.'
        required: true
        example: USA
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      state:
        name: state
        description: 'The state of the user.'
        required: true
        example: California
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      city:
        name: city
        description: 'The city of the user.'
        required: true
        example: 'Los Angeles'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      zip:
        name: zip
        description: 'The zip code.'
        required: true
        example: '90001'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      address2:
        name: address2
        description: 'nullable The secondary address.'
        required: false
        example: 'Apt 4B'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'nullable The new password. Must include at least one special character (@$%&).'
        required: false
        example: P@ssword1
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      confirm_password:
        name: confirm_password
        description: 'nullable The confirmed password. Must match the password.'
        required: false
        example: P@ssword1
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      middle_name: Smith
      email: johndoe@example.com
      address: '123 Main St'
      phone: '1234567890'
      ecclesia_id: 1
      country: USA
      state: California
      city: 'Los Angeles'
      zip: '90001'
      address2: 'Apt 4B'
      password: P@ssword1
      confirm_password: P@ssword1
      status: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Member updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to update member.",
            "error": "Validation error or database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6ev45D8Za3b61PgahfEdkcV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/partners/delete/{id}'
    metadata:
      groupName: Members
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a Member'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the partner to delete.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Member has been deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to delete member.",
            "error": "Validation error or database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer acPad53keVh6g6EZ1vfb8D4'
    controller: null
    method: null
    route: null
    custom: []
