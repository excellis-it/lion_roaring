## Autogenerated by Scribe. DO NOT MODIFY.

name: Education
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v3/user/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Topics
      subgroupDescription: 'APIs for managing topics in the system.'
      title: 'Topic Lists'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "data": {
                 "current_page": 1,
                 "data": [
                     {
                         "id": 11,
                         "topic_name": "Third Topic",
                         "education_type": "Becoming a Leader",
                         "created_at": "2024-09-09T11:10:22.000000Z",
                         "updated_at": "2024-09-09T11:10:22.000000Z"
                     },
                     {
                         "id": 10,
                         "topic_name": "Third Topic",
                         "education_type": "Becoming Christ Like",
                         "created_at": "2024-09-09T11:05:52.000000Z",
                         "updated_at": "2024-09-09T11:10:04.000000Z"
                     },
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/topics?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/topics?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/topics?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/topics",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 8,
                 "total": 8
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ze64aPdcvb813afDgE65khV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Topics
      subgroupDescription: 'APIs for managing topics in the system.'
      title: 'Create Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      topic_name:
        name: topic_name
        description: 'The name of the topic.'
        required: true
        example: '"Sample Topic"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      education_type:
        name: education_type
        description: 'The type of education.'
        required: true
        example: '"General"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_name: '"Sample Topic"'
      education_type: '"General"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Topic created successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed for the provided data.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6b4c56f1aEVadg3vPk8hDeZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/topics/{topic}/edit'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Topics
      subgroupDescription: 'APIs for managing topics in the system.'
      title: 'View Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      topic:
        name: topic
        description: 'The topic.'
        required: true
        example: nisi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the topic.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      topic: nisi
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "topic_name": "Sample Topic",
              "education_type": "General"
            },
            "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ak83654VDPbavEgh6Z1fdce'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v3/user/topics/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Topics
      subgroupDescription: 'APIs for managing topics in the system.'
      title: 'Update Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the topic to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      topic_name:
        name: topic_name
        description: 'The name of the topic.'
        required: true
        example: '"Updated Topic"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      education_type:
        name: education_type
        description: 'The type of education.'
        required: true
        example: '"General"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_name: '"Updated Topic"'
      education_type: '"General"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Topic updated successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed for the provided data.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer de51kVbP6caDgfvZ3h4E8a6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/topics/delete/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Topics
      subgroupDescription: 'APIs for managing topics in the system.'
      title: 'Delete Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the topic.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Topic deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bg6Zd1D845caafk3EvVe6Ph'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-sovereign
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Becoming Sovereigns List'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      topic: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          *{
             "data": {
                 "current_page": 1,
                 "data": [

                     {
                         "id": 60,
                         "user_id": 1,
                         "file_name": "topic- Back to the Basics Description and Outline.docx",
                         "file_extension": "docx",
                         "topic_id": 4,
                         "type": "Becoming Sovereign",
                         "file": "files\/qm5d3aJ5Z6esEep7WZAs19BLo4KRsjXp9w1RITYv.docx",
                         "created_at": "2024-08-02T09:32:31.000000Z",
                         "updated_at": "2024-08-02T09:32:31.000000Z"
                     },
                     {
                         "id": 59,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 1.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Sovereign",
                         "file": "files\/bv7C4BiH0N1s8WXrVZpPV2s6YTWN5sVUQs5PE584.pptx",
                         "created_at": "2024-08-02T09:31:40.000000Z",
                         "updated_at": "2024-08-02T09:31:40.000000Z"
                     },
                     {
                         "id": 57,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 3.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Sovereign",
                         "file": "files\/BDp5AHtA4ZIsqziYPUxCbRL91bcbSvAVv4m8S9Zs.pptx",
                         "created_at": "2024-08-02T09:29:56.000000Z",
                         "updated_at": "2024-08-02T09:29:56.000000Z"
                     }
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 11,
                 "total": 11
             },
             "topics": [
                 {
                     "id": 12,
                     "topic_name": "abcd",
                     "education_type": "Becoming Sovereign",
                     "created_at": "2024-11-08T09:42:48.000000Z",
                     "updated_at": "2024-11-08T09:42:48.000000Z"
                 },
                 {
                     "id": 6,
                     "topic_name": "Leadership Development",
                     "education_type": "Becoming Sovereign",
                     "created_at": "2024-08-02T09:17:16.000000Z",
                     "updated_at": "2024-08-16T08:58:34.000000Z"
                 },
             ],
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gdc1av5kV6ZPEaDb6h8e4f3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-sovereign/list-by-topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'List by Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sortby:
        name: sortby
        description: 'The column to sort by (optional, default: id).'
        required: false
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sorttype:
        name: sorttype
        description: "The sort direction, either 'asc' or 'desc' (optional, default: 'asc')."
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      query:
        name: query
        description: 'The search query to filter files by ID, file name, or file extension (optional).'
        required: false
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to filter files by (optional).'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sortby: expedita
      sorttype: voluptas
      query: id
      topic_id: 19
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Files retrieved successfully.",
             "data": [
                 {
                     "id": 77,
                     "user_id": 37,
                     "file_name": "image.png",
                     "file_extension": "png",
                     "topic_id": 13,
                     "type": "Becoming Sovereign",
                     "file": "files\/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                     "created_at": "2024-11-08T11:01:16.000000Z",
                     "updated_at": "2024-11-08T11:01:16.000000Z"
                 }
             ],
             "pagination": {
                 "total": 1,
                 "per_page": 15,
                 "current_page": 1,
                 "last_page": 1
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6gPdveac6baD541hkfEZV83'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-sovereign/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Get List of Topics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "topic_name": "Sample Topic",
                "education_type": "Becoming Sovereign",
                "created_at": "2024-09-09T11:02:39.000000Z",
                "updated_at": "2024-09-09T11:02:39.000000Z"
              }
            ],
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to fetch topics. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer adV1a3Zk6fEveD5g4Phc86b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/becoming-sovereign/store
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Create New'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate the file with.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 0
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File uploaded successfully.",
             "data": {
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": "13",
                 "type": "Becoming Sovereign",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "updated_at": "2024-11-08T11:01:16.000000Z",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "id": 77
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "The file name has already been taken.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation errors occurred.",
            "errors": {
              "file": ["The file field is required."],
              "topic_id": ["The topic id field is required."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Va685f4ZaPbghdc16ke3vDE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-sovereign/view/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'View File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to view.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by (optional).'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      topic: 14
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File details retrieved successfully.",
             "data": {
                 "id": 77,
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": 13,
                 "type": "Becoming Sovereign",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "updated_at": "2024-11-08T11:01:16.000000Z"
             },
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZE1ad6vVf8Phc5eka4Dg63b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/becoming-sovereign/update/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Update File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: asperiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: asperiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The new file to replace the existing one (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate with the file.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 1
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File updated successfully.",
            "data": {
              "id": 1,
              "file_name": "updated_sample.pdf",
              "file_extension": "pdf",
              "topic_id": 1,
              "user_id": 1,
              "file": "updated_file_path_here"
            },
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "file": ["The file name has already been taken."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e8P3hVgdfaEvkD6c6ab14Z5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-sovereign/delete/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Delete File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kefEvVg3hc568bZD1a6d4Pa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-sovereign/download/{file}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Sovereign'
      subgroupDescription: 'APIs for managing becoming sovereign files and topics.'
      title: 'Download file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      file:
        name: file
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      file: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'A downloadable file response with the specified file.'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ek14Vaghb83aPv6efD5dcZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-christ-like
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Becoming Christ Likes List'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      topic: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          *{
             "data": {
                 "current_page": 1,
                 "data": [

                     {
                         "id": 60,
                         "user_id": 1,
                         "file_name": "topic- Back to the Basics Description and Outline.docx",
                         "file_extension": "docx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/qm5d3aJ5Z6esEep7WZAs19BLo4KRsjXp9w1RITYv.docx",
                         "created_at": "2024-08-02T09:32:31.000000Z",
                         "updated_at": "2024-08-02T09:32:31.000000Z"
                     },
                     {
                         "id": 59,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 1.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/bv7C4BiH0N1s8WXrVZpPV2s6YTWN5sVUQs5PE584.pptx",
                         "created_at": "2024-08-02T09:31:40.000000Z",
                         "updated_at": "2024-08-02T09:31:40.000000Z"
                     },
                     {
                         "id": 57,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 3.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/BDp5AHtA4ZIsqziYPUxCbRL91bcbSvAVv4m8S9Zs.pptx",
                         "created_at": "2024-08-02T09:29:56.000000Z",
                         "updated_at": "2024-08-02T09:29:56.000000Z"
                     }
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 11,
                 "total": 11
             },
             "topics": [
                 {
                     "id": 12,
                     "topic_name": "abcd",
                     "education_type": "Becoming Christ Like",
                     "created_at": "2024-11-08T09:42:48.000000Z",
                     "updated_at": "2024-11-08T09:42:48.000000Z"
                 },
                 {
                     "id": 6,
                     "topic_name": "Leadership Development",
                     "education_type": "Becoming Christ Like",
                     "created_at": "2024-08-02T09:17:16.000000Z",
                     "updated_at": "2024-08-16T08:58:34.000000Z"
                 },
             ],
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 861b6Ekgac3v5ZdafPVD4he'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-christ-like/list-by-topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'List by Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sortby:
        name: sortby
        description: 'The column to sort by (optional, default: id).'
        required: false
        example: quis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sorttype:
        name: sorttype
        description: "The sort direction, either 'asc' or 'desc' (optional, default: 'asc')."
        required: false
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      query:
        name: query
        description: 'The search query to filter files by ID, file name, or file extension (optional).'
        required: false
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to filter files by (optional).'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sortby: quis
      sorttype: eos
      query: et
      topic_id: 7
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Files retrieved successfully.",
             "data": [
                 {
                     "id": 77,
                     "user_id": 37,
                     "file_name": "image.png",
                     "file_extension": "png",
                     "topic_id": 13,
                     "type": "Becoming Christ Like",
                     "file": "files\/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                     "created_at": "2024-11-08T11:01:16.000000Z",
                     "updated_at": "2024-11-08T11:01:16.000000Z"
                 }
             ],
             "pagination": {
                 "total": 1,
                 "per_page": 15,
                 "current_page": 1,
                 "last_page": 1
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DE68daVgf5kvPb4ech13aZ6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/becoming-christ-like/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Get List of Topics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "topic_name": "Sample Topic",
                "education_type": "Becoming Christ Like",
                "created_at": "2024-09-09T11:02:39.000000Z",
                "updated_at": "2024-09-09T11:02:39.000000Z"
              }
            ],
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to fetch topics. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8v3kDacd5faVgbh61e6E4ZP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/becoming-christ-like/store
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Create New'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate the file with.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 0
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File uploaded successfully.",
             "data": {
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": "13",
                 "type": "Becoming Christ Like",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "updated_at": "2024-11-08T11:01:16.000000Z",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "id": 77
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "The file name has already been taken.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation errors occurred.",
            "errors": {
              "file": ["The file field is required."],
              "topic_id": ["The topic id field is required."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Dv41E3bPfga6kedhZVc8a6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-christ-like/view/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'View File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to view.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by (optional).'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      topic: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File details retrieved successfully.",
             "data": {
                 "id": 77,
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": 13,
                 "type": "Becoming Christ Like",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "updated_at": "2024-11-08T11:01:16.000000Z"
             },
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vE8PZdgckV1D4fah66eb3a5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/becoming-christ-like/update/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Update File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: sit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The new file to replace the existing one (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate with the file.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 1
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File updated successfully.",
            "data": {
              "id": 1,
              "file_name": "updated_sample.pdf",
              "file_extension": "pdf",
              "topic_id": 1,
              "user_id": 1,
              "file": "updated_file_path_here"
            },
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "file": ["The file name has already been taken."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6dV8veD4h6agcPkaZ513Ebf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-christ-like/delete/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Delete File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v165akgbDVh38ePdZEf4ac6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/becoming-christ-like/download/{file}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming Christ Like'
      subgroupDescription: 'APIs for managing Becoming Christ Like files and topics.'
      title: 'Download file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      file:
        name: file
        description: ''
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      file: odit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'A downloadable file response with the specified file.'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5ZaV6ebEv1gfc4k3hP6d8aD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/leadership-development
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Becoming a Leaders List'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      topic: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          *{
             "data": {
                 "current_page": 1,
                 "data": [

                     {
                         "id": 60,
                         "user_id": 1,
                         "file_name": "topic- Back to the Basics Description and Outline.docx",
                         "file_extension": "docx",
                         "topic_id": 4,
                         "type": "Becoming a Leader",
                         "file": "files\/qm5d3aJ5Z6esEep7WZAs19BLo4KRsjXp9w1RITYv.docx",
                         "created_at": "2024-08-02T09:32:31.000000Z",
                         "updated_at": "2024-08-02T09:32:31.000000Z"
                     },
                     {
                         "id": 59,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 1.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming a Leader",
                         "file": "files\/bv7C4BiH0N1s8WXrVZpPV2s6YTWN5sVUQs5PE584.pptx",
                         "created_at": "2024-08-02T09:31:40.000000Z",
                         "updated_at": "2024-08-02T09:31:40.000000Z"
                     },
                     {
                         "id": 57,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 3.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming a Leader",
                         "file": "files\/BDp5AHtA4ZIsqziYPUxCbRL91bcbSvAVv4m8S9Zs.pptx",
                         "created_at": "2024-08-02T09:29:56.000000Z",
                         "updated_at": "2024-08-02T09:29:56.000000Z"
                     }
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 11,
                 "total": 11
             },
             "topics": [
                 {
                     "id": 12,
                     "topic_name": "abcd",
                     "education_type": "Becoming a Leader",
                     "created_at": "2024-11-08T09:42:48.000000Z",
                     "updated_at": "2024-11-08T09:42:48.000000Z"
                 },
                 {
                     "id": 6,
                     "topic_name": "Leadership Development",
                     "education_type": "Becoming a Leader",
                     "created_at": "2024-08-02T09:17:16.000000Z",
                     "updated_at": "2024-08-16T08:58:34.000000Z"
                 },
             ],
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ea6g4fD3cV8P6aZev1dk5hb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/leadership-development/list-by-topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'List by Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sortby:
        name: sortby
        description: 'The column to sort by (optional, default: id).'
        required: false
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sorttype:
        name: sorttype
        description: "The sort direction, either 'asc' or 'desc' (optional, default: 'asc')."
        required: false
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      query:
        name: query
        description: 'The search query to filter files by ID, file name, or file extension (optional).'
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to filter files by (optional).'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sortby: dolor
      sorttype: veniam
      query: porro
      topic_id: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Files retrieved successfully.",
             "data": [
                 {
                     "id": 77,
                     "user_id": 37,
                     "file_name": "image.png",
                     "file_extension": "png",
                     "topic_id": 13,
                     "type": "Becoming a Leader",
                     "file": "files\/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                     "created_at": "2024-11-08T11:01:16.000000Z",
                     "updated_at": "2024-11-08T11:01:16.000000Z"
                 }
             ],
             "pagination": {
                 "total": 1,
                 "per_page": 15,
                 "current_page": 1,
                 "last_page": 1
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5kZgfV663ah1b48EcPdDvea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/leadership-development/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Get List of Topics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "topic_name": "Sample Topic",
                "education_type": "Becoming a Leader",
                "created_at": "2024-09-09T11:02:39.000000Z",
                "updated_at": "2024-09-09T11:02:39.000000Z"
              }
            ],
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to fetch topics. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D5463P6k8bhaeVfcZgEvad1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/leadership-development/store
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Create New'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate the file with.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 0
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File uploaded successfully.",
             "data": {
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": "13",
                 "type": "Becoming a Leader",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "updated_at": "2024-11-08T11:01:16.000000Z",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "id": 77
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "The file name has already been taken.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation errors occurred.",
            "errors": {
              "file": ["The file field is required."],
              "topic_id": ["The topic id field is required."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 58hecb4PdE6vfaa1VD3gZk6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/leadership-development/view/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'View File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to view.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by (optional).'
        required: false
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      topic: 12
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File details retrieved successfully.",
             "data": {
                 "id": 77,
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": 13,
                 "type": "Becoming a Leader",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "updated_at": "2024-11-08T11:01:16.000000Z"
             },
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3af4VZ6vEd65ePchDgkb81a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/leadership-development/update/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Update File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The new file to replace the existing one (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate with the file.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 1
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File updated successfully.",
            "data": {
              "id": 1,
              "file_name": "updated_sample.pdf",
              "file_extension": "pdf",
              "topic_id": 1,
              "user_id": 1,
              "file": "updated_file_path_here"
            },
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "file": ["The file name has already been taken."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PdkVbe18g663Dc5f4EvZhaa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/leadership-development/delete/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Delete File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5D3ge486vfZaE1bP6ahcVdk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/leadership-development/download/{file}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: 'Becoming a Leader'
      subgroupDescription: 'APIs for managing Becoming a Leader files and topics.'
      title: 'Download file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      file:
        name: file
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      file: tempore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'A downloadable file response with the specified file.'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ack48haEefZ6DV1Pd653gvb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/files
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Files List'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      topic: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          *{
             "data": {
                 "current_page": 1,
                 "data": [

                     {
                         "id": 60,
                         "user_id": 1,
                         "file_name": "topic- Back to the Basics Description and Outline.docx",
                         "file_extension": "docx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/qm5d3aJ5Z6esEep7WZAs19BLo4KRsjXp9w1RITYv.docx",
                         "created_at": "2024-08-02T09:32:31.000000Z",
                         "updated_at": "2024-08-02T09:32:31.000000Z"
                     },
                     {
                         "id": 59,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 1.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/bv7C4BiH0N1s8WXrVZpPV2s6YTWN5sVUQs5PE584.pptx",
                         "created_at": "2024-08-02T09:31:40.000000Z",
                         "updated_at": "2024-08-02T09:31:40.000000Z"
                     },
                     {
                         "id": 57,
                         "user_id": 1,
                         "file_name": "topic-Back to the Basics Part 3.pptx",
                         "file_extension": "pptx",
                         "topic_id": 4,
                         "type": "Becoming Christ Like",
                         "file": "files\/BDp5AHtA4ZIsqziYPUxCbRL91bcbSvAVv4m8S9Zs.pptx",
                         "created_at": "2024-08-02T09:29:56.000000Z",
                         "updated_at": "2024-08-02T09:29:56.000000Z"
                     }
                 ],
                 "first_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "from": 1,
                 "last_page": 1,
                 "last_page_url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": null,
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": null,
                 "path": "http:\/\/127.0.0.1:8000\/api\/v3\/user\/becoming-sovereign",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 11,
                 "total": 11
             },
             "topics": [
                 {
                     "id": 12,
                     "topic_name": "abcd",
                     "education_type": "Becoming Christ Like",
                     "created_at": "2024-11-08T09:42:48.000000Z",
                     "updated_at": "2024-11-08T09:42:48.000000Z"
                 },
                 {
                     "id": 6,
                     "topic_name": "Leadership Development",
                     "education_type": "Becoming Christ Like",
                     "created_at": "2024-08-02T09:17:16.000000Z",
                     "updated_at": "2024-08-16T08:58:34.000000Z"
                 },
             ],
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fb4c3aevVaDE85Zk66P1gdh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/files/list-by-topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'List by Topic'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      sortby:
        name: sortby
        description: 'The column to sort by (optional, default: id).'
        required: false
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sorttype:
        name: sorttype
        description: "The sort direction, either 'asc' or 'desc' (optional, default: 'asc')."
        required: false
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      query:
        name: query
        description: 'The search query to filter files by ID, file name, or file extension (optional).'
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to filter files by (optional).'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      sortby: enim
      sorttype: sunt
      query: voluptatem
      topic_id: 5
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Files retrieved successfully.",
             "data": [
                 {
                     "id": 77,
                     "user_id": 37,
                     "file_name": "image.png",
                     "file_extension": "png",
                     "topic_id": 13,
                     "type": "Becoming Christ Like",
                     "file": "files\/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                     "created_at": "2024-11-08T11:01:16.000000Z",
                     "updated_at": "2024-11-08T11:01:16.000000Z"
                 }
             ],
             "pagination": {
                 "total": 1,
                 "per_page": 15,
                 "current_page": 1,
                 "last_page": 1
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vcge46EVZa3D81Pabkfh5d6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/files/topics
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Get List of Topics'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "topic_name": "Sample Topic",
                "education_type": "Becoming Christ Like",
                "created_at": "2024-09-09T11:02:39.000000Z",
                "updated_at": "2024-09-09T11:02:39.000000Z"
              }
            ],
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Failed to fetch topics. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cbP5v48akde1EaD66hZfg3V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/files/store
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Create New'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The file to upload.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate the file with.'
        required: true
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 0
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File uploaded successfully.",
             "data": {
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": "13",
                 "type": "Becoming Christ Like",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "updated_at": "2024-11-08T11:01:16.000000Z",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "id": 77
             },
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "The file name has already been taken.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation errors occurred.",
            "errors": {
              "file": ["The file field is required."],
              "topic_id": ["The topic id field is required."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kab681gv6Za5hcP4fdED3Ve'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/files/view/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'View File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to view.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters:
      topic:
        name: topic
        description: 'The ID of the topic to filter by (optional).'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanQueryParameters:
      topic: 9
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "File details retrieved successfully.",
             "data": {
                 "id": 77,
                 "user_id": 37,
                 "file_name": "image.png",
                 "file_extension": "png",
                 "topic_id": 13,
                 "type": "Becoming Christ Like",
                 "file": "files/WoKa3ViZP3eoU6cqhAqcBqBdVfeGgGADoPS5c8WK.png",
                 "created_at": "2024-11-08T11:01:16.000000Z",
                 "updated_at": "2024-11-08T11:01:16.000000Z"
             },
             "new_topic": "",
             "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8eaD6VvbaPEd4kZ6g15cfh3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v3/user/files/update/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Update File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: aspernatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The new file to replace the existing one (optional).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      topic_id:
        name: topic_id
        description: 'The ID of the topic to associate with the file.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      topic_id: 1
    fileParameters:
      file: null
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File updated successfully.",
            "data": {
              "id": 1,
              "file_name": "updated_sample.pdf",
              "file_extension": "pdf",
              "topic_id": 1,
              "user_id": 1,
              "file": "updated_file_path_here"
            },
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "file": ["The file name has already been taken."]
            },
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PdZafe8DE3g64Vv6bh1a5ck'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/files/delete/{id}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Delete File'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the file to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "File deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer abZVfaPDeg656384hEckv1d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/files/download/{file}'
    metadata:
      groupName: Education
      groupDescription: ''
      subgroup: Files
      subgroupDescription: 'APIs for managing files.'
      title: 'Download file'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      file:
        name: file
        description: ''
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      file: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'A downloadable file response with the specified file.'
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "File not found.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Something went wrong. Please try again later.",
            "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 465Zv6cDe83kPfhdVagEba1'
    controller: null
    method: null
    route: null
    custom: []
