## Autogenerated by Scribe. DO NOT MODIFY.

name: Profile
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v3/user/profile
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Profile Details'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "message": "Profile details",
          "data": {
             "id": 2,
             "user_name": "john_doe",
             "first_name": "John",
             "middle_name": null,
             "last_name": "Doe",
             "email": "john@yopmail.com",
             "phone": "7415236986",
             "email_verified_at": null,
             "profile_picture": "profile_picture/1h5ihHDrrOf3Fp4O0Fg1EnLLkhuXn7vW4C1CAUZY.jpg",
             "address": "51 DN Block Merlin Infinite Building, 9th Floor, Unit, 907, Sector V, Bidhannagar, Kolkata, West Bengal 700091",
             "status": 1,
             "created_at": "2024-03-05T10:58:13.000000Z",
             "updated_at": "2024-04-18T12:27:38.000000Z"
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46PgdaD5vb8f6e3Zh1VakEc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/update-profile
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'The first name of the user.'
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      middle_name:
        name: middle_name
        description: 'optional The middle name of the user.'
        required: false
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      last_name:
        name: last_name
        description: 'The last name of the user.'
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The phone number of the user.'
        required: true
        example: '7415236986'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'The address of the user.'
        required: true
        example: '51 DN Block Merlin Infinite Building, 9th Floor, Unit, 907, Sector V, Bidhannagar, Kolkata, West Bengal 700091'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      first_name: John
      middle_name: Doe
      last_name: Doe
      phone: '7415236986'
      address: '51 DN Block Merlin Infinite Building, 9th Floor, Unit, 907, Sector V, Bidhannagar, Kolkata, West Bengal 700091'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "message": "Profile updated successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6V34eZgc1E5vPd8Dah6afbk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/profile-picture-update
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Profile Picture'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_picture:
        name: profile_picture
        description: 'The profile picture of the user.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      profile_picture: null
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "message": "Profile picture updated successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
          "status": false,
          "message": "The profile picture must be an image."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 63kfa6ZE1h8vDbaegcP4Vd5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/change-password
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change Password'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      old_password:
        name: old_password
        description: 'The old password of the user.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      new_password:
        name: new_password
        description: 'The new password of the user.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The confirm password of the user.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      old_password: password
      new_password: password123
      confirm_password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "message": "Password changed successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E8fvZdkca635PDeV6h1bga4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/check-role-permission
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check User Permission'
      description: 'Checks whether the authenticated user has a given permission.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permission_name:
        name: permission_name
        description: 'The name of the permission to check.'
        required: true
        example: 'Manage Email'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      permission_name: 'Manage Email'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "User has permission"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "status": false,
           "message": "User does not have permission"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The permission_name field is required.",
           "status": false
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
           "status": false,
           "message": "An error occurred: [error_message]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6cDhEafV1gZd6v3ak58Pbe4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/check-menu-permission
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check Menu Permissions'
      description: 'This endpoint checks the menu permissions for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "menus": [
              {
                "menu_name": "menu_a",
                "permission_name": "permission_name_aa",
                "active": true
              },
              {
                "menu_name": "menu_b",
                "permission_name": "permission_name_bb",
                "active": false
              },
              {
                "menu_name": "menu_c",
                "permission_name": "permission_name_cc",
                "active": true
              }
            ],
            "message": "Menu permissions fetched successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "status": false,
            "message": "An error occurred: <error_message>"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "status": false,
            "message": "User does not have permission"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8b6ve36cfad1VhDPkaZ4E5g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/notifications
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Notifications list'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "list": {
                 "current_page": 1,
                 "data": [
                     {
                         "id": 862,
                         "user_id": 37,
                         "chat_id": null,
                         "message": "You have a <b>new mail</b> from masum@excellisit.net",
                         "status": 0,
                         "type": "Mail",
                         "is_read": 0,
                         "is_delete": 0,
                         "created_at": "2024-12-04T05:40:32.000000Z",
                         "updated_at": "2024-12-04T05:40:32.000000Z"
                     },
                     {
                         "id": 860,
                         "user_id": 37,
                         "chat_id": null,
                         "message": "You have a <b>new mail</b> from masum@excellisit.net",
                         "status": 0,
                         "type": "Mail",
                         "is_read": 0,
                         "is_delete": 0,
                         "created_at": "2024-12-04T05:37:44.000000Z",
                         "updated_at": "2024-12-04T05:37:44.000000Z"
                     }
                 ],
                 "first_page_url": "http://127.0.0.1:8000/api/v3/user/notifications?page=1",
                 "from": 1,
                 "last_page": 15,
                 "last_page_url": "http://127.0.0.1:8000/api/v3/user/notifications?page=15",
                 "links": [
                     {
                         "url": null,
                         "label": "&laquo; Previous",
                         "active": false
                     },
                     {
                         "url": "http://127.0.0.1:8000/api/v3/user/notifications?page=1",
                         "label": "1",
                         "active": true
                     },
                     {
                         "url": "http://127.0.0.1:8000/api/v3/user/notifications?page=2",
                         "label": "2",
                         "active": false
                     },
                     {
                         "url": "http://127.0.0.1:8000/api/v3/user/notifications?page=2",
                         "label": "Next &raquo;",
                         "active": false
                     }
                 ],
                 "next_page_url": "http://127.0.0.1:8000/api/v3/user/notifications?page=2",
                 "path": "http://127.0.0.1:8000/api/v3/user/notifications",
                 "per_page": 15,
                 "prev_page_url": null,
                 "to": 15,
                 "total": 216
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
            "message": "Page not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fva38DEP4Vca1k6gbehdZ56'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/notification-read/{type}/{id}'
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark a notification as read.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type of notification (Chat, Team, Mail).'
        required: false
        example: Chat
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      id:
        name: id
        description: 'The ID of the notification.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      type: Chat
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Notification marked as read"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Notification not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 83a5av4e16PdfkhDbVcgZE6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/notification-clear
    metadata:
      groupName: Profile
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete all notifications'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Notification deleted successfully.",
            "status": true
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer badEfkV1a8Zg56Ph6v4Dce3'
    controller: null
    method: null
    route: null
    custom: []
