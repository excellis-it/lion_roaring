## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Role & Permissions Management'
description: |-

  APIs for managing roles and permissions
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v3/user/role-permissions
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'List all roles'
      description: |-
        Returns a list of all roles with their associated permissions.
        Super Admin role is excluded for non-super-admin users.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "roles": [
              {
                "id": 2,
                "name": "ECCLESIA ADMIN",
                "guard_name": "web",
                "type": 2,
                "is_ecclesia": 1,
                "created_at": "2023-10-15T14:30:45.000000Z",
                "updated_at": "2023-10-15T14:30:45.000000Z",
                "permissions": [
                  {
                    "id": 1,
                    "name": "Manage Users",
                    "guard_name": "web",
                    "type": 1,
                    "created_at": "2023-10-15T14:30:45.000000Z",
                    "updated_at": "2023-10-15T14:30:45.000000Z",
                    "pivot": {
                      "role_id": 2,
                      "permission_id": 1
                    }
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5v68aVkdfEZeD1aPh46cbg3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v3/user/role-permissions/permissions
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all available permissions'
      description: 'Returns a list of all available permissions that can be assigned to roles.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "permissions": [
              {
                "id": 1,
                "name": "Manage Users",
                "guard_name": "web",
                "type": 1,
                "created_at": "2023-10-15T14:30:45.000000Z",
                "updated_at": "2023-10-15T14:30:45.000000Z"
              },
              {
                "id": 2,
                "name": "Manage Roles",
                "guard_name": "web",
                "type": 1,
                "created_at": "2023-10-15T14:30:45.000000Z",
                "updated_at": "2023-10-15T14:30:45.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kahbZV35D6caPEdv1ef46g8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v3/user/role-permissions/{id}'
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific role'
      description: 'Returns details of a specific role including its permissions.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "role": {
              "id": 2,
              "name": "ECCLESIA ADMIN",
              "guard_name": "web",
              "type": 2,
              "is_ecclesia": 1,
              "created_at": "2023-10-15T14:30:45.000000Z",
              "updated_at": "2023-10-15T14:30:45.000000Z",
              "permissions": [
                {
                  "id": 1,
                  "name": "Manage Users",
                  "guard_name": "web",
                  "type": 1,
                  "created_at": "2023-10-15T14:30:45.000000Z",
                  "updated_at": "2023-10-15T14:30:45.000000Z",
                  "pivot": {
                    "role_id": 2,
                    "permission_id": 1
                  }
                }
              ]
            },
            "permissions": [
              {
                "id": 1,
                "name": "Manage Users",
                "guard_name": "web",
                "type": 1,
                "created_at": "2023-10-15T14:30:45.000000Z",
                "updated_at": "2023-10-15T14:30:45.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Role not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VZhvdceg13PDa8fbk456Ea6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v3/user/role-permissions
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new role'
      description: 'Creates a new role with the specified permissions.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role_name:
        name: role_name
        description: 'The name of the role.'
        required: true
        example: Manager
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      is_ecclesia:
        name: is_ecclesia
        description: 'Whether this role is for ecclesia management (0=No, 1=Yes).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      permissions:
        name: permissions
        description: 'Array of permission IDs to assign to the role.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      role_name: Manager
      is_ecclesia: 1
      permissions:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Role created successfully",
            "role": {
              "name": "Manager",
              "guard_name": "web",
              "type": 2,
              "is_ecclesia": 1,
              "updated_at": "2023-10-28T12:34:56.000000Z",
              "created_at": "2023-10-28T12:34:56.000000Z",
              "id": 5
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The role name field is required."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bv6fZD8a56Pk3VhdEg1ca4e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v3/user/role-permissions/{id}'
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a role'
      description: 'Updates an existing role with new name and permissions.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role_name:
        name: role_name
        description: 'The name of the role.'
        required: true
        example: 'Senior Manager'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      is_ecclesia:
        name: is_ecclesia
        description: 'Whether this role is for ecclesia management (0=No, 1=Yes).'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      permissions:
        name: permissions
        description: 'Array of permission IDs to assign to the role.'
        required: true
        example:
          - 1
          - 2
          - 3
          - 4
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      role_name: 'Senior Manager'
      is_ecclesia: 1
      permissions:
        - 1
        - 2
        - 3
        - 4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role updated successfully",
            "role": {
              "id": 2,
              "name": "Senior Manager",
              "guard_name": "web",
              "type": 2,
              "is_ecclesia": 1,
              "created_at": "2023-10-15T14:30:45.000000Z",
              "updated_at": "2023-10-28T13:45:30.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Role not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The role name field is required."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46ec6bE1v8dag5ZkP3VhaDf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v3/user/role-permissions/{id}'
    metadata:
      groupName: 'Role & Permissions Management'
      groupDescription: |-

        APIs for managing roles and permissions
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a role'
      description: 'Deletes an existing role. The Super Admin role cannot be deleted.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
            "message": "You cannot delete the Super Admin role"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Role not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b46hacaDP3vgdZVf65kEe81'
    controller: null
    method: null
    route: null
    custom: []
